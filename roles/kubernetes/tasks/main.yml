---
- name: Fixing nasty bug
  shell: "iptables -P FORWARD ACCEPT"
  ignore_errors: True

- name: Add APT Key for Kubernetes
  apt_key:
    url: "https://packages.cloud.google.com/apt/doc/apt-key.gpg"
    state: "present"

- name: Add Repo
  apt_repository:
    repo: "deb http://apt.kubernetes.io/ kubernetes-xenial main"
    state: "present"

- name: Apt Get Update
  apt:
    update_cache: "yes"

- name: Install packages
  apt:
    name: "{{ item }}"
    state: "present"
  with_items:
    - kubelet
    - kubeadm
    - kubectl
    - kubernetes-cni

- name: Overide Kubelet service config to add IP Address
  become: true
  template:
    src: "10-kubeadm.conf"
    dest: "/etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
  notify:
    - reload systemd

- meta: flush_handlers

- name: Checking if first master was initialized
  stat:
    path: /etc/kubernetes
  register: kubernetes_directory
  when: inventory_hostname == groups["masters"][0]

- name: Initialise Kubernetes Cluster
  shell: "kubeadm init --token={{ kubeadm_token }} --apiserver-advertise-address={{ ansible_host }} --pod-network-cidr=10.244.0.0/16"
  when:
    - inventory_hostname == groups["masters"][0]

- name: Creating .kube file in $HOME
  file:
    path: ~/.kube
    state: directory
  when:
    - inventory_hostname == groups["masters"][0]

- name: Copying /etc/kubernetes/admin.conf to ~/.kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    remote_src: yes
  when:
    - inventory_hostname == groups["masters"][0]

- name: Running first kubectl
  shell: "kubectl get nodes"
  register: first_kubectl
  when:
    - inventory_hostname == groups["masters"][0]

- name: Checking kubectl
  debug: var=first_kubectl.stdout
  when:
    - inventory_hostname == groups["masters"][0]

# Flannel deployment
- name: Deploy Flannel
  shell: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.9.1/Documentation/kube-flannel.yml"
  when:
    - inventory_hostname == groups["masters"][0]

- name: Get Kubernetes version
  shell: "kubectl version | base64 | tr -d '\n'"
  register: kubever
  when:
    - inventory_hostname == groups["masters"][0]
  
- name: Checking if kube-dns is Running
  shell: "kubectl get pods -n kube-system | grep kube-dns | awk '{print $3}'"
  register: kube_dns_running
  until: ("Running" in kube_dns_running.stdout)
  retries: 60
  delay: 2
  when:
    - inventory_hostname == groups["masters"][0]

- name: Checking if kube-proxy is Running
  shell: "ps -ef | grep [k]ube-proxy"
  register: kube_proxy_running
  ignore_errors: True
  when: inventory_hostname != groups["masters"]

- name: Join Kubernetes Cluster
  shell: "kubeadm join --token={{ kubeadm_token }} {{ kubernetes_master_ip }}:6443 --discovery-token-unsafe-skip-ca-verification"
  when:
    - inventory_hostname != groups["masters"][0]
    - "'/usr/local/bin/kube-proxy' not in kube_proxy_running.stdout"
